generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model bet {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  amount     Int
  status     String   @db.VarChar(255)
  game_id    String?  @db.Uuid
  user_id    String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  game       game?    @relation(fields: [game_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model game {
  id              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String        @db.VarChar(255)
  rules           String        @db.VarChar(255)
  betting_limit   Int
  organization_id String?       @db.Uuid
  created_at      DateTime      @default(now()) @db.Timestamp(6)
  updated_at      DateTime      @default(now()) @db.Timestamp(6)
  bet             bet[]
  organization    organization? @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model invitation {
  id                                     String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  status                                 String        @db.VarChar(255)
  invited_user_id                        String?       @db.Uuid
  inviting_user_id                       String?       @db.Uuid
  organization_id                        String?       @db.Uuid
  created_at                             DateTime      @default(now()) @db.Timestamp(6)
  updated_at                             DateTime      @default(now()) @db.Timestamp(6)
  user_invitation_invited_user_idTouser  user?         @relation("invitation_invited_user_idTouser", fields: [invited_user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_invitation_inviting_user_idTouser user?         @relation("invitation_inviting_user_idTouser", fields: [inviting_user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  organization                           organization? @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model organization {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?       @db.VarChar(255)
  status      String?       @db.VarChar(255)
  name        String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  user_id     String        @db.Uuid
  tenant_id   String        @db.VarChar(255)
  game        game[]
  invitation  invitation[]
  user        user          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  team_member team_member[]
}

model team_member {
  id              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id         String?       @db.Uuid
  organization_id String?       @db.Uuid
  role            String        @db.VarChar(255)
  status          String        @db.VarChar(255)
  created_at      DateTime      @default(now()) @db.Timestamp(6)
  updated_at      DateTime      @default(now()) @db.Timestamp(6)
  organization    organization? @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user            user?         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                                           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                                        String         @unique @db.VarChar(255)
  firstName                                    String?        @db.VarChar(255)
  lastName                                     String?        @db.VarChar(255)
  roq_user_id                                  String         @db.VarChar(255)
  tenant_id                                    String         @db.VarChar(255)
  created_at                                   DateTime       @default(now()) @db.Timestamp(6)
  updated_at                                   DateTime       @default(now()) @db.Timestamp(6)
  bet                                          bet[]
  invitation_invitation_invited_user_idTouser  invitation[]   @relation("invitation_invited_user_idTouser")
  invitation_invitation_inviting_user_idTouser invitation[]   @relation("invitation_inviting_user_idTouser")
  organization                                 organization[]
  team_member                                  team_member[]
}
